[
  {
    "ContainingType": "Cirkula.WebApi.Controllers.StoresController",
    "Method": "GetAllAsync",
    "RelativePath": "api/Stores",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Circuka.RequestResponse.Models.StoreResponse, Circuka.RequestResponse.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Cirkula.WebApi.Controllers.StoresController",
    "Method": "CreateAsync",
    "RelativePath": "api/Stores",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "BannerImg",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "Latitude",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "Longitude",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "OpenTime",
        "Type": "System.TimeOnly",
        "IsRequired": false
      },
      {
        "Name": "CloseTime",
        "Type": "System.TimeOnly",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Circuka.RequestResponse.Models.StoreResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Cirkula.WebApi.Controllers.StoresController",
    "Method": "UpdateAsync",
    "RelativePath": "api/Stores/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Circuka.RequestResponse.Models.StoreRequest",
        "IsRequired": true
      },
      {
        "Name": "id",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Cirkula.WebApi.Controllers.StoresController",
    "Method": "DeleteAsync",
    "RelativePath": "api/Stores/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Cirkula.WebApi.Controllers.StoresController",
    "Method": "GetAllWithDetails",
    "RelativePath": "api/Stores/GetAllWithDetails",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "latitude",
        "Type": "System.Double",
        "IsRequired": false
      },
      {
        "Name": "longitude",
        "Type": "System.Double",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Circuka.RequestResponse.Models.StoreResponse, Circuka.RequestResponse.Models, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Cirkula.WebApi.Controllers.StoresController",
    "Method": "GetByIdAsync",
    "RelativePath": "api/Stores/GetById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Circuka.RequestResponse.Models.StoreResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetStore"
  },
  {
    "ContainingType": "Cirkula.WebApi.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Cirkula.WebApi.WeatherForecast, Cirkula.WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]